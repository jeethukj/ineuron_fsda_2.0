USE DATABASE DEMODATABASE;

--CREATE TABLE AND LOAD DATA
CREATE or replace table SALES_DATA
     (	
      ORDER_ID VARCHAR(50) NOT NULL PRIMARY KEY,
      ORDER_DATE STRING, 
	    SHIP_DATE STRING, 
	    SHIP_MODE VARCHAR(50), 
      CUSTOMER_NAME VARCHAR(100),
      SEGMENT string,
      STATE VARCHAR(50),
      COUNTRY VARCHAR(50),
      MARKET VARCHAR(100),
      REGION VARCHAR2(100),
      PRODUCT_ID VARCHAR(50),
      CATEGORY VARCHAR2(100),
      SUB_CATEGORY VARCHAR(100),
      PRODUCT_NAME VARCHAR(200),
      SALES NUMBER(18,0),
      QUANTITY NUMBER(12,0),
      DISCOUNT NUMBER(12,2),
      PROFIT NUMBER(12,4),
      SHIPPING_COST NUMBER(12,3),
      ORDER_PRIORITY VARCHAR(50),
      YEAR STRING
);

DESCRIBE TABLE SALES_DATA;

SELECT * FROM SALES_DATA;


--CREATING COPY OF TABLE SALES DATA
CREATE OR REPLACE TABLE  SALES_DATA_COPY_DATA AS
SELECT * FROM SALES_DATA;

SELECT * FROM SALES_DATA_COPY_DATA;

desc table SALES_DATA_COPY_DATA;

--2. CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE.
select *,cast(ORDER_DATE as DATE) AS orderdate FROM SALES_DATA_COPY_DATA;
select *,cast(SHIP_DATE as DATE) AS shipdate FROM SALES_DATA_COPY_DATA;

--3. EXTRACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT.
SELECT *,split_part(ORDER_ID,'-',3) as ORDER_ID_PART FROM SALES_DATA_COPY_DATA;

ALTER TABLE SALES_DATA_COPY_DATA ADD COLUMN ORDER_EXTRACT INT ;

UPDATE SALES_DATA_COPY_DATA SET ORDER_EXTRACT=split_part(ORDER_ID,'-',3);

--4.  FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN Discount Flag EVERY ORDER ID.
SELECT *,
   CASE WHEN DISCOUNT>0 THEN 'YES'
        ELSE 'NO'
   END AS DISCOUNT_FLAG
   FROM SALES_DATA_COPY_DATA;

ALTER TABLE SALES_DATA_COPY_DATA ADD COLUMN DISCOUNT_FLAG VARCHAR(50);

UPDATE SALES_DATA_COPY_DATA SET 
    DISCOUNT_FLAG=(
   CASE WHEN DISCOUNT>0 THEN 'YES'
        ELSE 'NO'
   END);

SELECT * FROM SALES_DATA_COPY_DATA;

--5.  FIND OUT THE FINAL PROFIT AND PUT IT IN COLUMN FOR EVERY ORDER ID.
SELECT ORDER_ID, sum(PROFIT) AS FINAL_PROFIT FROM SALES_DATA_COPY_DATA GROUP BY ORDER_ID;

--6.  FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.
SELECT DISTINCT ORDER_ID,DATEDIFF(DAY,cast(ORDER_DATE as DATE),cast(SHIP_DATE as DATE)) AS PROCESS_DAYS FROM SALES_DATA_COPY_DATA;

ALTER TABLE SALES_DATA_COPY_DATA ADD COLUMN PROCESS_DAYS INT ;

UPDATE SALES_DATA_COPY_DATA SET PROCESS_DAYS=DATEDIFF(DAY,cast(ORDER_DATE as DATE),cast(SHIP_DATE as DATE));

--7 . FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,
--LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.

SELECT *,DATEDIFF(DAY,cast(ORDER_DATE as DATE),cast(SHIP_DATE as DATE)) AS PROCESS_DAYS,
   CASE WHEN PROCESS_DAYS<=3 THEN 5
        WHEN PROCESS_DAYS<=6 AND PROCESS_DAYS>3 THEN 4
        WHEN PROCESS_DAYS<=10 AND PROCESS_DAYS>6 THEN 3
        ELSE 2
   END AS RATING
   FROM SALES_DATA_COPY_DATA;

ALTER TABLE SALES_DATA_COPY_DATA ADD COLUMN RATING VARCHAR(50);

UPDATE SALES_DATA_COPY_DATA SET 
    RATING=(
    CASE WHEN PROCESS_DAYS<=3 THEN 5
        WHEN PROCESS_DAYS<=6 AND PROCESS_DAYS>3 THEN 4
        WHEN PROCESS_DAYS<=10 AND PROCESS_DAYS>6 THEN 3
        ELSE 2
   END );
   
SELECT * FROM  SALES_DATA_COPY_DATA;  
